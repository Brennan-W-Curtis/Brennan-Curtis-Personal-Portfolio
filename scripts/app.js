// Declare a namespace object to store all variables and functions.
const myApp = {};

// Listens for when the user scrolls then calls the updatePosition method when such an event should occur.
myApp.windowScroll = () => {
    window.onscroll = () => {
        myApp.updatePosition();
    }
}

// Dynamically update the icon used in the side navigation based on the user's vertical position on the document.  
myApp.updatePosition = () => {
    // Store the HTML used to render the different states the side navigation icons can take.
    const inactive = `<i class="far fa-circle"></i>`;
    const active = `<i class="fas fa-circle"></i>`;

    // Store the value dynamically generated by how far the user has scroll vertically along the document.
    const currentPosition = document.documentElement.scrollTop;

    // Store a reference to each of the links in the side navigation. 
    const headerSection = document.querySelector("#headerLink");
    const aboutSection = document.querySelector("#aboutLink"); 
    const skillsSection = document.querySelector("#skillsLink");
    const projectsSection = document.querySelector("#projectsLink");
    const contactSection = document.querySelector("#contactLink");

    // A series of conditional statements that updates the icon of the current section the user is currently viewing upon scrolling.
    currentPosition >= 0 && currentPosition < 889 ?
        headerSection.innerHTML = active :
        headerSection.innerHTML = inactive;

    currentPosition > 888 && currentPosition < 1393 ?
        aboutSection.innerHTML = active :
        aboutSection.innerHTML = inactive;

    currentPosition > 1392 && currentPosition < 1932 ?
        skillsSection.innerHTML = active :
        skillsSection.innerHTML = inactive;

    currentPosition > 1931 && currentPosition < 2584 ?
        projectsSection.innerHTML = active :
        projectsSection.innerHTML = inactive;

    currentPosition > 2583 ?
        contactSection.innerHTML = active :
        contactSection.innerHTML = inactive;
}

// Declare the initialization method.
myApp.init = () => {
    myApp.windowScroll();
}

// Call the initialization method.
myApp.init();